openapi: "3.0.2"
info:
  version: 1.0.0
  title: OpenAPI Spring Test API
  license:
    name: MIT
servers:
  - url: http://localhost
    description: localhost
paths:
  /coolStuffs:
    get:
      summary: get cool stuff
      operationId: getCoolStuff
      tags:
        - coolStuff
      responses:
        200:
          description: An array of cool stuff
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/CoolStuffs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: post some cool stuff
      operationId: post cool stuff
      tags:
        - coolStuff
      requestBody:
        description: cool stuff request body
        required: true
        content:
          application/json:    
            schema:
              $ref: "#/components/schemas/CoolStuff"
      responses:
        201:
          description: cool stuff was created
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/CoolStuff"
  /coolStuffs/{id}:
    get:
      summary: get cool stuff by id
      operationId: getCoolStuffById
      tags:
        - coolStuff
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: The cool stuff by id
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/CoolStuff"
        404:
          description: The cool stuff does not exist
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    id:
      in: path
      name: id
      schema:
        type: integer
        format: int64
        minimum: 1
      required: true
      description: Numeric ID
  schemas:
    CoolStuff:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        commons:
          type: array
          items:
            $ref: "commons.yaml#/components/schemas/CommonStuff"
    CoolStuffs:
      type: array
      items:
        $ref: "#/components/schemas/CoolStuff"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
